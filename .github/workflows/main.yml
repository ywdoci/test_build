name: YWD-CICD

on:
  push:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        distribution: 'temurin'
        java-version: '11'
        cache: 'gradle'
        

    - name: Grant execute permission for gradlew
      run: chmod +x ./SourceCode/gradlew
  

    - name: Build with Gradle
      run: ./SourceCode/gradlew build

      
    - name: Upload war file to artifact
      uses: actions/upload-artifact@v2
      with:
        name: war-package
        path: ./SourceCode/build/libs/*.war

    - name: Download war file from artifact
      uses: actions/download-artifact@v2
      with:
        name: war-package

    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v1

    - name: Build and push
      id: docker_build
      uses: docker/build-push-action@v2
      with:
        context: ./
        file: ./SourceCode/Dockerfile/Dockerfile
        push: true
        tags: ${{ secrets.DOCKER_HUB_USERNAME }}/test:latest

    - name: Image digest
      run: echo ${{ steps.docker_build.outputs.digest }}



    - name: 'Write Config & Key Files'
      run: |
        mkdir ~/.oci
        echo "[DEFAULT]" >> ~/.oci/config
        echo "user=${{secrets.OCI_USER_OCID}}" >> ~/.oci/config
        echo "fingerprint=${{secrets.OCI_FINGERPRINT}}" >> ~/.oci/config
        echo "region=${{secrets.OCI_REGION}}" >> ~/.oci/config
        echo "tenancy=${{secrets.OCI_TENANCY_OCID}}" >> ~/.oci/config
        echo "key_file=~/.oci/key.pem" >> ~/.oci/config
        echo "${{secrets.OCI_KEY_FILE}}" >> ~/.oci/key.pem
    - name: 'Install OCI CLI'
      run: |
        curl -L -O https://raw.githubusercontent.com/oracle/oci-cli/master/scripts/install/install.sh
        chmod +x install.sh
        ./install.sh --accept-all-defaults
        exec -l $SHELL
      
    - name: 'Fix Config File Permissions'
      run: |
          export PATH=$PATH:/home/runner/bin
          echo $PATH
          oci setup repair-file-permissions --file /home/runner/.oci/config
          oci setup repair-file-permissions --file /home/runner/.oci/key.pem
          oci os ns get

